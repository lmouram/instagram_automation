# --- Exemplo de Arquivo de Configuração de Ambiente ---
#
# Este arquivo serve como um modelo para as variáveis de ambiente necessárias
# para executar a aplicação. Para desenvolvimento local, copie este arquivo
# para um novo arquivo chamado `.env` e preencha os valores.
#
# O arquivo `.env` NUNCA deve ser enviado para o repositório Git.
#

# --- Configuração do Supabase ---
# Encontrado nas configurações do seu projeto Supabase em "Project Settings > API".
SUPABASE_URL=""
SUPABASE_KEY=""

# Nome do bucket no Supabase Storage onde as mídias serão armazenadas.
# Se não for definido, o padrão 'media_storage' será usado.
SUPABASE_STORAGE_BUCKET="media_storage"


# --- Configuração do Google AI (Gemini e Imagen) ---
# Chave de API gerada no Google AI Studio (https://aistudio.google.com/app/apikey).
# Esta chave será usada para os serviços Gemini e Imagen 4.
GEMINI_API_KEY=""


# --- Configuração da API do Instagram Graph ---
# O ID da sua conta profissional do Instagram.
# Encontrado no Meta for Developers App > Instagram Graph API > Configured Instagram Accounts.
INSTAGRAM_ACCOUNT_ID=""

# O token de acesso de usuário de longa duração com as permissões necessárias
# (instagram_content_publish, etc.).
META_ACCESS_TOKEN=""


# --- Configuração de Logging (Opcional) ---
# Estas variáveis têm valores padrão sensíveis definidos em src/config.py.
# Você pode sobrescrevê-los aqui se necessário.

# Nível de log para o console (DEBUG, INFO, WARNING, ERROR, CRITICAL).
# Padrão: INFO
LOG_LEVEL_CONSOLE="INFO"

# Nível de log para o arquivo (mais detalhado).
# Padrão: DEBUG
LOG_LEVEL_FILE="DEBUG"

# Caminho para o arquivo de log. O diretório será criado se não existir.
# Padrão: logs/app.log
LOG_FILENAME="logs/app.log"

# Tamanho máximo do arquivo de log em bytes antes da rotação.
# Padrão: 10485760 (10 MB)
LOG_MAX_BYTES="10485760"

# Número de arquivos de log de backup a serem mantidos.
# Padrão: 5
LOG_BACKUP_COUNT="5"